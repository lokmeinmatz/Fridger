export class ProductTemplate {
    constructor(productName, barCode) {
        this.productName = productName
        this.barCode = (barCode) ? barCode : undefined
        this.id = `${productName}#${barCode ? barCode : '-'}`
    }
}

/**
 * @class 
 */
export class ProductInstance {
    /**
     * 
     * @param {ProductTemplate} template Template this Instance is based on
     * @param {String} instanceID The uniqe id (generated by store / server)
     * @param {string} bestBefore required bestBefore ISO string
     * @param {string | undefined} openSince if product is allready opened
     */
    constructor(template, instanceID, bestBefore, openSince) {
        this.template = template
        this.instanceID = instanceID
        this.bestBefore = bestBefore
        this.openSince = openSince
        this.filterString = ''
        this.updateFilterString()
    }

    isExpired() {
        return new Date(this.bestBefore) <= new Date()
    }
    updateFilterString() {
        this.filterString = `${this.openSince != undefined ? 'offen' : ''} ${this.isExpired() ? 'abgelaufen' : ''} ${this.template.productName} ${this.template.barCode}`
    }
}